# 开发环境 Dockerfile - 支持热重载和源码挂载
FROM node:22-alpine AS dev

WORKDIR /app

# 设置环境变量以优化包管理器性能
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
ENV NPM_CONFIG_CACHE="/root/.npm"
ENV PNPM_STORE_DIR="/pnpm-store"

# 开发环境变量
ENV NODE_ENV=development
ENV FAST_REFRESH=true
ENV WDS_SOCKET_HOST=0.0.0.0
ENV CHOKIDAR_USEPOLLING=true
ENV WATCHPACK_POLLING=true
ENV HOST=0.0.0.0
ENV PORT=3000

# if you located in China, you can use aliyun mirror to speed up
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories

# Install bash git dos2unix for TypeScript compiler
RUN apk add --no-cache bash git dos2unix

# if you located in China, you can use aliyun mirror to speed up
RUN npm config set registry https://registry.npmmirror.com

# Install pnpm, rush and rushx globally first (this layer rarely changes)
RUN npm install -g pnpm @microsoft/rush @microsoft/rushx

# Initialize a git repository to avoid git-related errors during build
RUN git init && \
    git config user.email "docker@coze.com" && \
    git config user.name "Docker Build" && \
    touch .gitkeep && \
    git add . && \
    git commit -m "Initial commit for Docker build"

# Copy only dependency-related files first for better caching
COPY rush.json ./
COPY common/ ./common/
COPY scripts/ ./scripts/

# Convert line endings for shell scripts in scripts directory to Unix format
RUN find . -name "*.sh" -type f -exec dos2unix {} \;

# 开发环境：直接复制所有前端源码（开发时会通过卷挂载覆盖）
COPY frontend/ ./frontend/

# Install dependencies with persistent caching
RUN --mount=type=cache,target=/pnpm-store,id=pnpm-store-dev,sharing=locked \
    --mount=type=cache,target=/pnpm-cache,id=pnpm-cache-dev,sharing=locked \
    --mount=type=cache,target=/root/.rush,id=rush-cache-dev,sharing=locked \
    --mount=type=cache,target=/root/.npm,id=npm-cache-dev,sharing=locked \
    --mount=type=cache,target=/app/common/temp,id=rush-temp-cache-dev,sharing=locked \
    chmod +x scripts/hooks/post-rush-install.sh && \
    # Configure pnpm for better performance and persistent caching
    npm config set fetch-retry-mintimeout 20000 && \
    npm config set fetch-retry-maxtimeout 120000 && \
    npm config set fetch-retries 3 && \
    # Set up pnpm store for persistent caching
    pnpm config set store-dir /pnpm-store && \
    pnpm config set cache-dir /pnpm-cache && \
    # Use rush install with persistent cache - with retry mechanism
    rush install || (echo "First rush install failed, retrying..." && rush install)

# Ensure TypeScript compiler and other build dependencies are available globally
RUN --mount=type=cache,target=/root/.npm,id=npm-cache-dev \
    npm install -g typescript sucrase @types/node

# 开发环境端口
EXPOSE 3000
EXPOSE 8080

# 开发环境启动脚本 - 使用 rushx 运行开发服务器
CMD ["sh", "-c", "echo '🚀 Starting development server...' && rushx --to @coze-studio/app dev --host 0.0.0.0 --port 3000"]
